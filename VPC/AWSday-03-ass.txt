Jagruti.py
import boto3
import time


region = 'us-east-1'
instance_id = 'i-00a1d70451623fca0'
ec1 = boto3.client('ec2', region_name=region)
ec2=boto3.resource('ec2', region_name=region)


vpc = ec2.create_vpc(CidrBlock='10.0.0.0/16')
# we can assign a name to vpc, or any resource, by using tag
vpc.create_tags(Tags=[{"Key":"Name", "Value":"DontDelete-JagrutiVPC-1"}])
vpc.wait_until_available()
print(vpc.id)




subnet1 = ec2.create_subnet(CidrBlock='10.0.1.0/24', VpcId=vpc.id)
subnet2 = ec2.create_subnet(CidrBlock='10.0.2.0/24', VpcId=vpc.id)
subnet3 = ec2.create_subnet(CidrBlock='10.0.3.0/24', VpcId=vpc.id)
subnet4 = ec2.create_subnet(CidrBlock='10.0.4.0/24', VpcId=vpc.id)
print(subnet1.id)
print(subnet2.id)
print(subnet3.id)
print(subnet4.id)


intGateway  = ec2.create_internet_gateway()
intGateway.attach_to_vpc( VpcId = vpc.id )


# Create another route table for Public traffic
pubRouteTable = ec2.create_route_table( VpcId = vpc.id )
pubRouteTable.associate_with_subnet( SubnetId = subnet1.id )
pubRouteTable.associate_with_subnet( SubnetId = subnet2.id)


# Create another route table for Private traffic
pvtRouteTable = ec2.create_route_table( VpcId = vpc.id )
pvtRouteTable.associate_with_subnet( SubnetId = subnet3.id )
pvtRouteTable.associate_with_subnet( SubnetId = subnet4.id )


# Create a route for internet traffic to flow out
intRoute = ec1.create_route( RouteTableId = pubRouteTable.id , DestinationCidrBlock = '0.0.0.0/0' , GatewayId = intGateway.id )


eip_for_nat_gateway = ec1.allocate_address(Domain='vpc')
allocation_id = eip_for_nat_gateway['AllocationId']